
/** BEGIN_INPUT_DEFINITION *********************************************
 *
 * All specifications as seen by the parser.
 *
 * Do not edit - automatically generated.
 */

/**********************************************************
 * Dump of all structures:
 */

class DUMMY
{
  ;
} ;
class FEBEX_PADDING
{
  ;
} ;
class FEBEX_TRACES
{
  DATA8 ftrigger;
  DATA8 fboard;
  DATA32 ftrig_time_hi;
  DATA32 ftrig_time_lo;
  raw_array_multi_zero_suppress<DATA32,DATA32,16,32> fts_hi;
  raw_array_multi_zero_suppress<DATA32,DATA32,16,32> fts_lo;
  raw_array_multi_zero_suppress<DATA32,DATA32,16,32> fen;
  raw_array_zero_suppress<DATA32,DATA32,16> flength;
  raw_array_zero_suppress<DATA16,DATA16,4000> ftrace[16];
} ;
class TIMESTAMP_WHITERABBIT
{
  DATA12 subsystem_id;
  DATA16 t1;
  DATA16 t2;
  DATA16 t3;
  DATA16 t4;
} ;
class TIMESTAMP_WHITERABBIT_EXTENDED
{
  DATA16 subsystem_id;
  DATA16 t1;
  DATA16 t2;
  DATA16 t3;
  DATA16 t4;
} ;
class WR_MULTI
{
  DATA32 time_hi;
  DATA32 time_lo;
} ;
class febex_subev : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT wr;
  FEBEX_PADDING padding;
  FEBEX_TRACES data;
} ;
class unpack_event : public unpack_event_base
{
  febex_subev trace;
} ;
class unpack_sticky_event : public unpack_sticky_event_base
{
  ;
} ;
/**********************************************************/

/** END_INPUT_DEFINITION **********************************************/


/** BEGIN_MIRROR_STRUCT ************************************************
 *
 * Mirror (1 to 1) structure.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

#ifndef USER_DEF_DUMMY
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(DUMMY)
{
public:
  STRUCT_MIRROR_FCNS_DECL(DUMMY);
};
#endif//USER_DEF_DUMMY

#ifndef USER_DEF_FEBEX_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(FEBEX_PADDING);
};
#endif//USER_DEF_FEBEX_PADDING

#ifndef USER_DEF_FEBEX_TRACES
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_TRACES)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ftrigger);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ftrigger);
  STRUCT_MIRROR_ITEM_CTRL(fboard);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fboard);
  STRUCT_MIRROR_ITEM_CTRL(ftrig_time_hi);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ftrig_time_hi);
  STRUCT_MIRROR_ITEM_CTRL(ftrig_time_lo);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ftrig_time_lo);
  STRUCT_MIRROR_ITEM_CTRL(fts_hi);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16,32> STRUCT_MIRROR_NAME(fts_hi);
  STRUCT_MIRROR_ITEM_CTRL(fts_lo);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16,32> STRUCT_MIRROR_NAME(fts_lo);
  STRUCT_MIRROR_ITEM_CTRL(fen);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16,32> STRUCT_MIRROR_NAME(fen);
  STRUCT_MIRROR_ITEM_CTRL(flength);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(flength);
  STRUCT_MIRROR_ITEM_CTRL(ftrace);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(ftrace__i0,,16);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),4000> STRUCT_MIRROR_NAME(ftrace[16]);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_TRACES);
};
#endif//USER_DEF_FEBEX_TRACES

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(subsystem_id);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(subsystem_id);
  STRUCT_MIRROR_ITEM_CTRL(t1);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t1);
  STRUCT_MIRROR_ITEM_CTRL(t2);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t2);
  STRUCT_MIRROR_ITEM_CTRL(t3);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t3);
  STRUCT_MIRROR_ITEM_CTRL(t4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t4);
  STRUCT_MIRROR_FCNS_DECL(TIMESTAMP_WHITERABBIT);
};
#endif//USER_DEF_TIMESTAMP_WHITERABBIT

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT_EXTENDED
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT_EXTENDED)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(subsystem_id);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(subsystem_id);
  STRUCT_MIRROR_ITEM_CTRL(t1);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t1);
  STRUCT_MIRROR_ITEM_CTRL(t2);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t2);
  STRUCT_MIRROR_ITEM_CTRL(t3);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t3);
  STRUCT_MIRROR_ITEM_CTRL(t4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t4);
  STRUCT_MIRROR_FCNS_DECL(TIMESTAMP_WHITERABBIT_EXTENDED);
};
#endif//USER_DEF_TIMESTAMP_WHITERABBIT_EXTENDED

#ifndef USER_DEF_WR_MULTI
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(WR_MULTI)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_hi);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_hi);
  STRUCT_MIRROR_ITEM_CTRL(time_lo);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_lo);
  STRUCT_MIRROR_FCNS_DECL(WR_MULTI);
};
#endif//USER_DEF_WR_MULTI

#ifndef USER_DEF_febex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(febex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(wr);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(wr);
  STRUCT_MIRROR_ITEM_CTRL(padding);
  STRUCT_MIRROR_TYPE(FEBEX_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(FEBEX_TRACES) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(febex_subev);
};
#endif//USER_DEF_febex_subev

#ifndef USER_DEF_unpack_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_event) : public STRUCT_MIRROR_BASE(unpack_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_event_base);
  STRUCT_MIRROR_ITEM_CTRL(trace);
  STRUCT_MIRROR_TYPE(febex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trace);
  STRUCT_MIRROR_FCNS_DECL(unpack_event);
};
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_sticky_event) : public STRUCT_MIRROR_BASE(unpack_sticky_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_sticky_event_base);
  STRUCT_MIRROR_FCNS_DECL(unpack_sticky_event);
};
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_STRUCT *************************************************/


/** BEGIN_MIRROR_DECL_STRUCT *******************************************
 *
 * Mirror structure names.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(DUMMY);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_TRACES);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT_EXTENDED);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(WR_MULTI);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(febex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_event);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_sticky_event);

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_DECL_STRUCT ********************************************/


/** BEGIN_FUNCTION_CALL_PER_MEMBER *************************************
 *
 * Recursive function calls per member.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_fcncall_define.hh"

#ifndef USER_DEF_DUMMY
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(DUMMY)::FCNCALL_NAME(DUMMY)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_DUMMY

#ifndef USER_DEF_FEBEX_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_PADDING)::FCNCALL_NAME(FEBEX_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_PADDING

#ifndef USER_DEF_FEBEX_TRACES
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_TRACES)::FCNCALL_NAME(FEBEX_TRACES)
{
  FCNCALL_INIT;
  // DATA8 ftrigger;
  {
  FCNCALL_SUBNAME("ftrigger");
  { FCNCALL_CALL_CTRL_WRAP(ftrigger,ftrigger.FCNCALL_CALL(ftrigger)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA8 fboard;
  {
  FCNCALL_SUBNAME("fboard");
  { FCNCALL_CALL_CTRL_WRAP(fboard,fboard.FCNCALL_CALL(fboard)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 ftrig_time_hi;
  {
  FCNCALL_SUBNAME("ftrig_time_hi");
  { FCNCALL_CALL_CTRL_WRAP(ftrig_time_hi,ftrig_time_hi.FCNCALL_CALL(ftrig_time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 ftrig_time_lo;
  {
  FCNCALL_SUBNAME("ftrig_time_lo");
  { FCNCALL_CALL_CTRL_WRAP(ftrig_time_lo,ftrig_time_lo.FCNCALL_CALL(ftrig_time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA32,DATA32,16,32> fts_hi;
  {
  FCNCALL_SUBNAME("fts_hi");
  { FCNCALL_CALL_CTRL_WRAP(fts_hi,fts_hi.FCNCALL_CALL(fts_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA32,DATA32,16,32> fts_lo;
  {
  FCNCALL_SUBNAME("fts_lo");
  { FCNCALL_CALL_CTRL_WRAP(fts_lo,fts_lo.FCNCALL_CALL(fts_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA32,DATA32,16,32> fen;
  {
  FCNCALL_SUBNAME("fen");
  { FCNCALL_CALL_CTRL_WRAP(fen,fen.FCNCALL_CALL(fen)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,16> flength;
  {
  FCNCALL_SUBNAME("flength");
  { FCNCALL_CALL_CTRL_WRAP(flength,flength.FCNCALL_CALL(flength)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,4000> ftrace[16];
  {
  FCNCALL_SUBNAME("ftrace");
  FCNCALL_FOR(__i0,16)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(ftrace__i0,,__i0,ftrace[__i0].FCNCALL_CALL(ftrace[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_TRACES

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TIMESTAMP_WHITERABBIT)::FCNCALL_NAME(TIMESTAMP_WHITERABBIT)
{
  FCNCALL_INIT;
  // DATA12 subsystem_id;
  {
  FCNCALL_SUBNAME("subsystem_id");
  { FCNCALL_CALL_CTRL_WRAP(subsystem_id,subsystem_id.FCNCALL_CALL(subsystem_id)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t1;
  {
  FCNCALL_SUBNAME("t1");
  { FCNCALL_CALL_CTRL_WRAP(t1,t1.FCNCALL_CALL(t1)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t2;
  {
  FCNCALL_SUBNAME("t2");
  { FCNCALL_CALL_CTRL_WRAP(t2,t2.FCNCALL_CALL(t2)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t3;
  {
  FCNCALL_SUBNAME("t3");
  { FCNCALL_CALL_CTRL_WRAP(t3,t3.FCNCALL_CALL(t3)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t4;
  {
  FCNCALL_SUBNAME("t4");
  { FCNCALL_CALL_CTRL_WRAP(t4,t4.FCNCALL_CALL(t4)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TIMESTAMP_WHITERABBIT

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT_EXTENDED
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TIMESTAMP_WHITERABBIT_EXTENDED)::FCNCALL_NAME(TIMESTAMP_WHITERABBIT_EXTENDED)
{
  FCNCALL_INIT;
  // DATA16 subsystem_id;
  {
  FCNCALL_SUBNAME("subsystem_id");
  { FCNCALL_CALL_CTRL_WRAP(subsystem_id,subsystem_id.FCNCALL_CALL(subsystem_id)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t1;
  {
  FCNCALL_SUBNAME("t1");
  { FCNCALL_CALL_CTRL_WRAP(t1,t1.FCNCALL_CALL(t1)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t2;
  {
  FCNCALL_SUBNAME("t2");
  { FCNCALL_CALL_CTRL_WRAP(t2,t2.FCNCALL_CALL(t2)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t3;
  {
  FCNCALL_SUBNAME("t3");
  { FCNCALL_CALL_CTRL_WRAP(t3,t3.FCNCALL_CALL(t3)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t4;
  {
  FCNCALL_SUBNAME("t4");
  { FCNCALL_CALL_CTRL_WRAP(t4,t4.FCNCALL_CALL(t4)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TIMESTAMP_WHITERABBIT_EXTENDED

#ifndef USER_DEF_WR_MULTI
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(WR_MULTI)::FCNCALL_NAME(WR_MULTI)
{
  FCNCALL_INIT;
  // DATA32 time_hi;
  {
  FCNCALL_SUBNAME("time_hi");
  { FCNCALL_CALL_CTRL_WRAP(time_hi,time_hi.FCNCALL_CALL(time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 time_lo;
  {
  FCNCALL_SUBNAME("time_lo");
  { FCNCALL_CALL_CTRL_WRAP(time_lo,time_lo.FCNCALL_CALL(time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_WR_MULTI

#ifndef USER_DEF_febex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(febex_subev)::FCNCALL_NAME(febex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT wr;
  {
  FCNCALL_SUBNAME("wr");
  { FCNCALL_CALL_CTRL_WRAP(wr,wr.FCNCALL_CALL(wr)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_PADDING padding;
  {
  FCNCALL_SUBNAME("padding");
  { FCNCALL_CALL_CTRL_WRAP(padding,padding.FCNCALL_CALL(padding)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_TRACES data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_febex_subev

#ifndef USER_DEF_unpack_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_event)::FCNCALL_NAME(unpack_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_event_base,FCNCALL_CLASS_NAME(unpack_event_base)::FCNCALL_CALL_BASE());
  // febex_subev trace;
  {
  FCNCALL_SUBNAME("trace");
  { FCNCALL_CALL_CTRL_WRAP(trace,trace.FCNCALL_CALL(trace)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_sticky_event)::FCNCALL_NAME(unpack_sticky_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_sticky_event_base,FCNCALL_CLASS_NAME(unpack_sticky_event_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_fcncall_undef.hh"


/** END_FUNCTION_CALL_PER_MEMBER **************************************/


/** BEGIN_CORR_STRUCT **************************************************
 *
 * Correlation structure.
 *
 * Do not edit - automatically generated.
 */

// Corr struct for: DUMMY
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY
// .DUMMY// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY
// .DUMMY// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY
// .DUMMY
// Corr struct for: FEBEX_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING
// Corr struct for: FEBEX_TRACES
// DATA8  .ftrigger
  // ---
// DATA8  .fboard
  // ---
// DATA32  .ftrig_time_hi
  // ---
// DATA32  .ftrig_time_lo
  // ---
// raw_array_multi_zero_suppress  .fts_hi(DATA32)[16][32]
  // ---
// raw_array_multi_zero_suppress  .fts_lo(DATA32)[16][32]
  // ---
// raw_array_multi_zero_suppress  .fen(DATA32)[16][32]
  // ---
// raw_array_zero_suppress  .flength(DATA32)[16]
  // ---
// raw_array_zero_suppress  .ftrace[16](DATA16)[4000]
// DATA16 .ftrace[16][4000]
// 
// size= 1  chunks=64000  mem=64000  line=128000  total=-397934592
// size=4000  chunks= 16  mem=64000  line=64016  total=-197943296
// size=64000  chunks=  1  mem=64000  line=64001  total=-198903296
// 
// corr structure: FEBEX_TRACES
  // DATA16 .ftrace[16][4000]
// .FEBEX_TRACES/64000/.ftrace/64000/[16]/4000/[4000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_TRACES
// .FEBEX_TRACES// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_TRACES
// .FEBEX_TRACES
// Corr struct for: TIMESTAMP_WHITERABBIT
// DATA12  .subsystem_id
// DATA16  .t1
// DATA16  .t2
// DATA16  .t3
// DATA16  .t4
// DATA12 .subsystem_id
// DATA16 .t1
// DATA16 .t2
// DATA16 .t3
// DATA16 .t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: TIMESTAMP_WHITERABBIT
  // DATA12 .subsystem_id
  // DATA16 .t1
  // DATA16 .t2
  // DATA16 .t3
  // DATA16 .t4
// .TIMESTAMP_WHITERABBIT/5/.subsystem_id
                         // .t1
                         // .t2
                         // .t3
                         // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT
// .TIMESTAMP_WHITERABBIT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT
// .TIMESTAMP_WHITERABBIT
// Corr struct for: TIMESTAMP_WHITERABBIT_EXTENDED
// DATA16  .subsystem_id
// DATA16  .t1
// DATA16  .t2
// DATA16  .t3
// DATA16  .t4
// DATA16 .subsystem_id
// DATA16 .t1
// DATA16 .t2
// DATA16 .t3
// DATA16 .t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: TIMESTAMP_WHITERABBIT_EXTENDED
  // DATA16 .subsystem_id
  // DATA16 .t1
  // DATA16 .t2
  // DATA16 .t3
  // DATA16 .t4
// .TIMESTAMP_WHITERABBIT_EXTENDED/5/.subsystem_id
                                  // .t1
                                  // .t2
                                  // .t3
                                  // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT_EXTENDED
// .TIMESTAMP_WHITERABBIT_EXTENDED// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT_EXTENDED
// .TIMESTAMP_WHITERABBIT_EXTENDED
// Corr struct for: WR_MULTI
// DATA32  .time_hi
  // ---
// DATA32  .time_lo
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI
// Corr struct for: febex_subev
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .wr
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// FEBEX_PADDING  .padding
// FEBEX_TRACES  .data
  // DATA8  .ftrigger
    // ---
  // DATA8  .fboard
    // ---
  // DATA32  .ftrig_time_hi
    // ---
  // DATA32  .ftrig_time_lo
    // ---
  // raw_array_multi_zero_suppress  .fts_hi(DATA32)[16][32]
    // ---
  // raw_array_multi_zero_suppress  .fts_lo(DATA32)[16][32]
    // ---
  // raw_array_multi_zero_suppress  .fen(DATA32)[16][32]
    // ---
  // raw_array_zero_suppress  .flength(DATA32)[16]
    // ---
  // raw_array_zero_suppress  .ftrace[16](DATA16)[4000]
// DATA12 .wr.subsystem_id
// DATA16 .wr.t1
// DATA16 .wr.t2
// DATA16 .wr.t3
// DATA16 .wr.t4
// DATA16 .data.ftrace[16][4000]
// 
// size= 1  chunks=64005  mem=64005  line=128010  total=-396654542
// size= 5  chunks=64001  mem=320005  line=384006  total=-1191499746
// size=4000  chunks= 17  mem=68000  line=68017  total=58460789
// size=64000  chunks=  2  mem=128000  line=128002  total=-397166582
// size=64005  chunks=  1  mem=64005  line=64006  total=-198263266
// 
// corr structure: febex_subev
  // DATA12 .wr.subsystem_id
  // DATA16 .wr.t1
  // DATA16 .wr.t2
  // DATA16 .wr.t3
  // DATA16 .wr.t4
  // DATA16 .data.ftrace[16][4000]
// .febex_subev/64005/.wr/5/.subsystem_id
                         // .t1
                         // .t2
                         // .t3
                         // .t4
                   // .data/64000/.ftrace/64000/[16]/4000/[4000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: febex_subev
// .febex_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: febex_subev
// .febex_subev
// Corr struct for: unpack_event
//  : public unpack_event_base
// ---
// febex_subev  .trace
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .wr
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // FEBEX_PADDING  .padding
  // FEBEX_TRACES  .data
    // DATA8  .ftrigger
      // ---
    // DATA8  .fboard
      // ---
    // DATA32  .ftrig_time_hi
      // ---
    // DATA32  .ftrig_time_lo
      // ---
    // raw_array_multi_zero_suppress  .fts_hi(DATA32)[16][32]
      // ---
    // raw_array_multi_zero_suppress  .fts_lo(DATA32)[16][32]
      // ---
    // raw_array_multi_zero_suppress  .fen(DATA32)[16][32]
      // ---
    // raw_array_zero_suppress  .flength(DATA32)[16]
      // ---
    // raw_array_zero_suppress  .ftrace[16](DATA16)[4000]
// DATA12 .trace.wr.subsystem_id
// DATA16 .trace.wr.t1
// DATA16 .trace.wr.t2
// DATA16 .trace.wr.t3
// DATA16 .trace.wr.t4
// DATA16 .trace.data.ftrace[16][4000]
// 
// size= 1  chunks=64005  mem=64005  line=128010  total=-396654542
// size= 5  chunks=64001  mem=320005  line=384006  total=-1191499746
// size=4000  chunks= 17  mem=68000  line=68017  total=58460789
// size=64000  chunks=  2  mem=128000  line=128002  total=-397166582
// size=64005  chunks=  1  mem=64005  line=64006  total=-198263266
// 
// corr structure: unpack_event
  // DATA12 .trace.wr.subsystem_id
  // DATA16 .trace.wr.t1
  // DATA16 .trace.wr.t2
  // DATA16 .trace.wr.t3
  // DATA16 .trace.wr.t4
  // DATA16 .trace.data.ftrace[16][4000]
// .unpack_event/64005/.trace/64005/.wr/5/.subsystem_id
                                       // .t1
                                       // .t2
                                       // .t3
                                       // .t4
                                 // .data/64000/.ftrace/64000/[16]/4000/[4000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_event
// .unpack_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_event
// .unpack_event
// Corr struct for: unpack_sticky_event
//  : public unpack_sticky_event_base
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event

/** END_CORR_STRUCT ***************************************************/

